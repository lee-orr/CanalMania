name: Build project

on:
  push:
    tags:
      - '*'

env:
  binary: canal-mania
  add_binaries_to_github_release: true
  itch_target: lee-orr/canal-mania

jobs:
  test:
    uses: lee-orr/CargoMania/.github/workflows/test.yml@main
    secrets: inherit

  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    needs:
      - test
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: mac
            os: macos-latest
            targetPlatform: StandaloneOSX
          - os: windows-latest
            targetPlatform: StandaloneWindows64
            name: windows
          - os: ubuntu-latest
            targetPlatform: StandaloneLinux64
            name: linux
          - os: ubuntu-latest
            targetPlatform: WebGl
            name: webgl
    runs-on: ${{os}}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true

      # Git LFS
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.name }}
          restore-keys: Library-${{ matrix.name }}
      - uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
      - uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.name }}
          path: build/${{ matrix.name }}
      - name: Package as a zip
        run: |
          zip --recurse-paths ../${{ env.binary }}-${{matrix.name}}.zip ./build/{{matrix.name}}
      - name: Upload binaries to release
        if: ${{ env.add_binaries_to_github_release == 'true' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.binary }}-${{matrix.name}}.zip
          asset_name: ${{ env.binary }}-${{matrix.name}}-${{ steps.get_version.outputs.tag }}.zip
          tag: ${{ github.ref }}
          overwrite: true
  # upload-to-itch:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - buildForAllSupportedPlatforms

  #   steps:
  #     - name: Download artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         path: ./builds

  #     - name: Install butler
  #       run: |
  #         curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default
  #         unzip butler.zip
  #         chmod +x butler
  #         ./butler -V
  #     - uses: little-core-labs/get-git-tag@v3.0.1
  #       id: get_version
  #     - name: Upload to itch.io
  #       env:
  #         BUTLER_API_KEY: ${{ secrets.BUTLER_CREDENTIALS }}
  #       run: |
  #         for channel in $(ls builds); do
  #           ./butler push \
  #               --fix-permissions \
  #               --userversion="${{ steps.get_version.outputs.tag }}" \
  #               builds/$channel/* \
  #               ${{ env.itch_target }}:$channel
  #         done